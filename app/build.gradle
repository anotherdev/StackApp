// Version
def versionMajor = 0
def versionMinor = 0 // [0-9] minor feature releases
def versionPatch = 0 // [0-9] This should be bumped for hot fixes
def versionBuild = 1 // [0-99] bump for dogfood builds, public betas, etc.

// Double check the versioning
assert 0 <= versionMajor
for (versionPart in [versionPatch, versionMinor]) {
    assert 0 <= versionPart
    assert versionPart <= 9
}
assert 0 <= versionBuild
assert versionBuild <= 99

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    def BOOLEAN = "boolean"
    def TRUE = "true"
    def FALSE = "false"
    def STRING = "String"

    def LOGGING = "LOGGING"

    compileSdkVersion 23
    buildToolsVersion "23"

    defaultConfig { // RELEASE is the default!
        applicationId "com.anotherdev.stackapp"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField BOOLEAN, LOGGING, TRUE
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix ".${versionBuild} DEBUG"

            buildConfigField BOOLEAN, LOGGING, TRUE
        }
        beta.initWith(buildTypes.release)
        beta {
            applicationIdSuffix ".beta"
            versionNameSuffix ".${versionBuild} BETA"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

android {
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

android {
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(output.outputFile.parentFile,
                    output.outputFile.name.replace(".apk",
                            "-${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}.apk"));
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile('com.crashlytics.sdk.android:crashlytics:2.5.1@aar') {
        transitive = true;
    }

    compile 'com.android.support:appcompat-v7:23.0.0'
    compile 'com.android.support:cardview-v7:23.0.0'
    compile 'com.android.support:design:23.0.0'
    compile 'com.android.support:recyclerview-v7:23.0.0'
    compile 'com.android.support:support-annotations:23.0.0'

    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile 'com.github.bumptech.glide:okhttp-integration:1.3.1'

    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.google.guava:guava:18.0'
    compile 'com.google.dagger:dagger:2.0.1'
    apt 'com.google.dagger:dagger-compiler:2.0.1'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    compile 'com.jakewharton:butterknife:7.0.1'

    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'

    compile 'io.reactivex:rxandroid:0.25.0'

    compile "org.parceler:parceler-api:1.0.1"
    apt "org.parceler:parceler:1.0.1"
}
